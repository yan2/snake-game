!function(t){var s={};function e(i){if(s[i])return s[i].exports;var o=s[i]={i:i,l:!1,exports:{}};return t[i].call(o.exports,o,o.exports,e),o.l=!0,o.exports}e.m=t,e.c=s,e.d=function(t,s,i){e.o(t,s)||Object.defineProperty(t,s,{configurable:!1,enumerable:!0,get:i})},e.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},e.n=function(t){var s=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(s,"a",s),s},e.o=function(t,s){return Object.prototype.hasOwnProperty.call(t,s)},e.p="",e(e.s=0)}([function(t,s,e){"use strict";function i(t,s,e,i,o){i.clearRect(t*o,s*o,o,o),i.fillStyle=e,i.fillRect(t*o,s*o,o,o)}e.r(s);var o=class{constructor(t,s){var e=Math.floor(Math.random()*t),i=Math.floor(Math.random()*s);this.x=e,this.y=i}draw(t,s){i(this.x,this.y,"#B1CC95",t,s)}};new class{constructor(t,s){this.rows=t,this.cols=s,this.board=new class{constructor(t,s){this.numRows=t,this.numCols=s;const e=Math.floor((window.innerHeight-50)/this.numRows)*this.numRows;this.boxSize=e/this.numRows;const i=this.boxSize*this.numCols;this.canvas=document.createElement("canvas"),document.body.appendChild(this.canvas),this.canvas.width=i,this.canvas.height=e,this.canvas.setAttribute("style","border: 6px solid rgba(255,255,255,.65)"),this.context=this.canvas.getContext("2d"),this.reset()}draw(t,s){i(t,s,"rgba(255,255,255,.4)",this.context,this.boxSize)}reset(){this.context.clearRect(0,0,this.canvas.width,this.canvas.height),this.context.fillStyle="rgba(255,255,255,.4)",this.context.fillRect(0,0,this.canvas.width,this.canvas.height)}}(this.rows,this.cols),this.overlay=document.getElementById("overlay"),this.snake,this.food,this.score=0,this.anim,document.getElementById("start").addEventListener("click",()=>{this.startGame()}),document.getElementById("message").innerHTML="Use the keyboard arrow keys to move the snake to eat food!"}startGame(){this.reset(),this.snake=new class{constructor(t,s,e){this.posX=s,this.posY=e,this.snakeArr=[[this.posX,this.posY]],this.direction=t}move(){"left"===this.direction?this.posX-=1:"right"===this.direction?this.posX+=1:"up"===this.direction?this.posY-=1:"down"===this.direction&&(this.posY+=1),this.snakeArr.push([this.posX,this.posY])}ateFood(t){var s=this.snakeArr[this.snakeArr.length-1];return s[0]==t.x&&s[1]==t.y}hitBarrier(t,s){var e=this.snakeArr[this.snakeArr.length-1];if(e[0]>=s||e[0]<0||e[1]>=t||e[1]<0)return!0;for(let t of this.snakeArr.slice(0,this.snakeArr.length-1))if(t[0]==e[0]&&t[1]==e[1])return!0;return!1}draw(t,s){i(this.posX,this.posY,"#92B5D1",t,s)}}("right",0,0),this.food=new o(this.rows,this.cols),this.overlay.style.display="none",this.gameLoop(),window.onkeydown=(t=>{let s={37:"left",38:"up",39:"right",40:"down"}[t.keyCode];s&&(this.snake.direction=s.toString())})}updateScore(t){this.score+=t,document.getElementById("score").innerHTML=this.score}resetScore(){this.score=0,document.getElementById("score").innerHTML=this.score}gameLoop(){setTimeout(()=>{if(this.anim=requestAnimationFrame(this.gameLoop.bind(this)),this.snake.move(),this.snake.hitBarrier(this.board.numRows,this.board.numCols))this.endGame();else{if(this.snake.ateFood(this.food))this.updateScore(1),this.food=new o(this.board.numCols,this.board.numRows);else{let t=this.snake.snakeArr.shift();this.board.draw(t[0],t[1])}this.snake.draw(this.board.context,this.board.boxSize),this.food.draw(this.board.context,this.board.boxSize)}},50)}endGame(){cancelAnimationFrame(this.anim),this.board.reset(),document.getElementById("message").innerHTML="Game over! Your final score is "+this.score,this.overlay.style.display="flex"}reset(){this.resetScore(),this.board.reset()}}(50,50)}]);